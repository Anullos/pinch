import 'package:pinch/src/games/domain/models/game_lite_model.dart';
import 'package:pinch/src/games/domain/models/game_model.dart';
import 'package:pinch/src/games/domain/types/game_category_type.dart';
import 'package:pinch/src/games/domain/types/game_status_type.dart';

final gamesLite = [
  GameLiteModel(
    id: 1,
    name: 'test 1',
    summary: 'test',
    cover: null,
    category: GameCategoryType.episode(),
    status: null,
  ),
  GameLiteModel(
    id: 2,
    name: 'test 2',
    summary: 'test',
    cover: null,
    category: GameCategoryType.episode(),
    status: GameStatusType.alpha(),
  ),
];

final gamesLite10 = [
  GameLiteModel(
    id: 1,
    name: 'test 1',
    summary: 'test',
    cover: null,
    category: GameCategoryType.episode(),
    status: null,
  ),
  GameLiteModel(
    id: 2,
    name: 'test 2',
    summary: 'test',
    cover: null,
    category: GameCategoryType.episode(),
    status: GameStatusType.alpha(),
  ),
  GameLiteModel(
    id: 3,
    name: 'test 3',
    summary: 'test',
    cover: null,
    category: GameCategoryType.episode(),
    status: null,
  ),
  GameLiteModel(
    id: 4,
    name: 'test 4',
    summary: 'test',
    cover: null,
    category: GameCategoryType.episode(),
    status: GameStatusType.alpha(),
  ),
  GameLiteModel(
    id: 5,
    name: 'test 5',
    summary: 'test',
    cover: null,
    category: GameCategoryType.episode(),
    status: null,
  ),
  GameLiteModel(
    id: 6,
    name: 'test 6',
    summary: 'test',
    cover: null,
    category: GameCategoryType.episode(),
    status: GameStatusType.alpha(),
  ),
  GameLiteModel(
    id: 7,
    name: 'test 7',
    summary: 'test',
    cover: null,
    category: GameCategoryType.episode(),
    status: null,
  ),
  GameLiteModel(
    id: 8,
    name: 'test 8',
    summary: 'test',
    cover: null,
    category: GameCategoryType.episode(),
    status: GameStatusType.alpha(),
  ),
  GameLiteModel(
    id: 9,
    name: 'test 9',
    summary: 'test',
    cover: null,
    category: GameCategoryType.episode(),
    status: null,
  ),
  GameLiteModel(
    id: 10,
    name: 'test 10',
    summary: 'test',
    cover: null,
    category: GameCategoryType.episode(),
    status: GameStatusType.alpha(),
  ),
];

final gamesLite11 = [
  GameLiteModel(
    id: 1,
    name: 'test 1',
    summary: 'test',
    cover: null,
    category: GameCategoryType.episode(),
    status: null,
  ),
  GameLiteModel(
    id: 2,
    name: 'test 2',
    summary: 'test',
    cover: null,
    category: GameCategoryType.episode(),
    status: GameStatusType.alpha(),
  ),
  GameLiteModel(
    id: 3,
    name: 'test 3',
    summary: 'test',
    cover: null,
    category: GameCategoryType.episode(),
    status: null,
  ),
  GameLiteModel(
    id: 4,
    name: 'test 4',
    summary: 'test',
    cover: null,
    category: GameCategoryType.episode(),
    status: GameStatusType.alpha(),
  ),
  GameLiteModel(
    id: 5,
    name: 'test 5',
    summary: 'test',
    cover: null,
    category: GameCategoryType.episode(),
    status: null,
  ),
  GameLiteModel(
    id: 6,
    name: 'test 6',
    summary: 'test',
    cover: null,
    category: GameCategoryType.episode(),
    status: GameStatusType.alpha(),
  ),
  GameLiteModel(
    id: 7,
    name: 'test 7',
    summary: 'test',
    cover: null,
    category: GameCategoryType.episode(),
    status: null,
  ),
  GameLiteModel(
    id: 8,
    name: 'test 8',
    summary: 'test',
    cover: null,
    category: GameCategoryType.episode(),
    status: GameStatusType.alpha(),
  ),
  GameLiteModel(
    id: 9,
    name: 'test 9',
    summary: 'test',
    cover: null,
    category: GameCategoryType.episode(),
    status: null,
  ),
  GameLiteModel(
    id: 10,
    name: 'test 10',
    summary: 'test',
    cover: null,
    category: GameCategoryType.episode(),
    status: GameStatusType.alpha(),
  ),
  GameLiteModel(
    id: 11,
    name: 'test 11',
    summary: 'test',
    cover: null,
    category: GameCategoryType.episode(),
    status: GameStatusType.alpha(),
  ),
];

final gameOne = GameModel(
  id: 1,
  name: 'test 1',
  summary: 'test',
  cover: null,
  category: GameCategoryType.episode(),
  status: GameStatusType.alpha(),
  url: 'https://www.google.com',
  screenshots: [],
  similarGames: null,
);
